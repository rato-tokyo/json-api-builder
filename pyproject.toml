[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "json-api-builder"
version = "0.1.1"
description = "JSONデータ保存に特化したFastAPIサーバーを簡単に構築できるPythonライブラリ"
readme = "README.md"
license = "MIT"
requires-python = ">=3.10"
authors = [
    { name = "json-api-builder", email = "info@json-api-builder.com" },
]
keywords = ["fastapi", "json", "api", "builder", "sqlite", "crud"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Framework :: FastAPI",
    "Topic :: Internet :: WWW/HTTP :: HTTP Servers",
    "Topic :: Software Development :: Libraries :: Python Modules",
]

dependencies = [
    "fastapi>=0.104.0",
    "pydantic[email]>=2.0.0",
    "sqlalchemy>=2.0.0",
    "uvicorn[standard]>=0.24.0",
    "python-multipart>=0.0.6",
]

[project.optional-dependencies]
dev = [
    "factory-boy>=3.3.0",
    "httpx>=0.24.0",
    "mypy>=1.0.0",
    "pytest-mock>=3.10.0",
    "pytest>=7.0.0",
    "ruff>=0.1.0",
    "pyupgrade>=3.0.0",
    "vulture>=2.0.0",
]

[project.urls]
Homepage = "https://github.com/json-api-builder/json-api-builder"
Documentation = "https://json-api-builder.readthedocs.io/"
Repository = "https://github.com/json-api-builder/json-api-builder.git"
Issues = "https://github.com/json-api-builder/json-api-builder/issues"

[tool.hatchling.build.targets.wheel]
packages = ["json_api_builder"]



[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
addopts = "-v --tb=short"

[tool.ruff]
target-version = "py310"
line-length = 88
extend-exclude = [
    ".eggs",
    ".git",
    ".mypy_cache",
    ".tox",
    ".venv",
    "build",
    "dist",
]

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "N",   # pep8-naming
    "S",   # flake8-bandit
    "T20", # flake8-print
]
ignore = [
    "E501", # line too long, handled by formatter
    "B008", # do not perform function calls in argument defaults
    "C901", # too complex
    "S101", # use of assert
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]
"tests/**/*.py" = ["S101", "T20"]
"examples/**/*.py" = ["T20"]  # print文を許可
"main.py" = ["T20"]  # print文を許可

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.ruff.lint.isort]
known-first-party = ["json_api_builder"] 